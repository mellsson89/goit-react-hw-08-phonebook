{"version":3,"sources":["views/styles/views.module.scss","components/Filter/styles/filter.module.scss","components/ContactForm/styles/contactForm.module.scss","components/ContactList/styles/contactList.module.scss","components/Modal/styles/modal.module.scss","redux/contacts/contacts-selectors.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","components/ContactList/ContactList.js","components/Modal/Modal.js","views/ContactsPage/ContactsPage.js"],"names":["module","exports","allContacts","state","contacts","items","filterContacts","filter","getVisibleContacts","createSelector","normalizeFilter","toLowerCase","contact","name","includes","Filter","value","useSelector","dispatch","useDispatch","TextField","label","variant","size","type","onChange","e","handleFilter","currentTarget","className","style","filterInput","ContactForm","onSave","useState","setName","number","setNumber","handleChange","resetForm","onSubmit","preventDefault","cloneName","find","alert","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","message","form","formInput","id","pattern","title","required","Button","color","ContactList","onDelete","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","map","contactList_item","startIcon","onClick","Modal","onClose","children","modalRoot","document","querySelector","closeModalEscape","useCallback","code","useEffect","window","addEventListener","removeEventListener","createPortal","Modal__backdrop","target","Modal__content","App","showModal","setShowModal","errorMessenger","loading","loadingContacts","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","toggleModal","contacts_container","endIcon","Icon","height","width","timeout"],"mappings":"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","file":"static/js/contact-page.6710a39e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"views_login__iz0x9\",\"registered\":\"views_registered__2HkNm\",\"loginForm\":\"views_loginForm__1v8EK\",\"loginFormInput\":\"views_loginFormInput__1obzz\",\"loginForm-Button\":\"views_loginForm-Button__1PVCW\",\"contacts_container\":\"views_contacts_container__-sV4S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"filter_filterInput__C1Cdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__Xf3UP\",\"formInput\":\"contactForm_formInput__1NWn0\",\"formLabel\":\"contactForm_formLabel__2YvUF\",\"formButton\":\"contactForm_formButton__10Iqz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList_item\":\"contactList_contactList_item__2clu3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__backdrop\":\"modal_Modal__backdrop__1jJ6y\",\"Modal__content\":\"modal_Modal__content__fz9pQ\"};","import {createSelector} from \"@reduxjs/toolkit\";\n\nexport const allContacts=state => state.contacts.items;\n\nexport const filterContacts=state => state.contacts.filter;\n\nexport const loadingContacts =state => state.contacts.loading;\nexport const errorMessenger =state => state.contacts.error;\n\nexport const getVisibleContacts=createSelector([allContacts,filterContacts],(contacts,filter) =>{\n    const normalizeFilter=filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter))\n} )","import React from \"react\";\nimport style from './styles/filter.module.scss';\nimport {handleFilter} from '../../redux/contacts/contacts-actions';\nimport {filterContacts} from '../../redux/contacts/contacts-selectors';\nimport TextField from '@mui/material/TextField';\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\n\nexport default function Filter () {\n\n    const value=useSelector(state => filterContacts(state));\n    const dispatch=useDispatch();\n    const onChange=e => dispatch(handleFilter(e.currentTarget.value));\n\n    return (\n\n    <TextField label=\"Find contacts by name\" variant=\"outlined\" size='small' type='text' name='filter' value={value} onChange={onChange} className={style.filterInput}/>\n\n\n    )\n}\n\n","import React,{useState} from \"react\";\nimport style from './styles/contactForm.module.scss';\nimport {addContact} from '../../redux/contacts/contacts-operations';\nimport {allContacts} from '../../redux/contacts/contacts-selectors';\nimport {Button} from \"@material-ui/core\";\nimport TextField from '@mui/material/TextField';\nimport {useSelector,useDispatch} from \"react-redux\";\n\n\nexport default function ContactForm({onSave}){\n\n    const [name,setName]=useState('');\n    const [number,setNumber]=useState('');\n    const contacts=useSelector(state => allContacts(state));\n    const dispatch=useDispatch();\n\n\n\n    const handleChange = (e) => {\n        const {name,value}=e.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value)\n                return;\n            case 'number':\n                setNumber(value)\n                return;\n            default:return;\n        }\n    }\n\n    const handleSubmit =(e) => {\n        e.preventDefault();\n\n        const contact = {\n            name,\n            number\n        }\n\n       const cloneName= contacts.find(({name}) => contact.name.toLowerCase() === name.toLowerCase())\n\n        if(cloneName) {\n            const {name}=cloneName;\n            alert(`${name} is already in contacts`);\n            return;\n        }\n\n        dispatch(addContact(contact))\n        onSave();\n        resetForm()\n\n    }\n\n    const resetForm =() => {\n        setName('');\n       setNumber('');\n    }\n\n\n    return (\n        <form onSubmit={handleSubmit} className={style.form}>\n<span className={style.formInput}>\n        <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" size='small'\n                   type=\"text\"\n                   name=\"name\"\n                   value={name}\n                   onChange={handleChange}\n                   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                   title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                   required\n\n        />\n</span>\n\n\n            <span className={style.formInput}>\n                <TextField id=\"outlined-basic\" label=\"Number\" variant=\"outlined\" size='small'\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handleChange}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    className={style.formInput}\n                />\n            </span>\n            <Button variant=\"contained\" color=\"primary\" type='submit'>Add contact</Button>\n        </form>\n\n    )\n\n}\n\n","import axios from \"axios\";\nimport {addContactRequest,addContactSuccess,addContactError,deleteContactRequest,deleteContactSuccess,\n    deleteContactError,fetchContactsRequest,fetchContactsSuccess,fetchContactsError} from './contacts-actions'\n\n\n\nexport const fetchContact=()=> dispatch => {\n    dispatch(fetchContactsRequest());\n    axios.get('/contacts').then(({data}) => dispatch(fetchContactsSuccess(data))).catch(error => dispatch(fetchContactsError(error.message)))\n}\n\nexport const addContact=(value)=> dispatch => {\n    dispatch(addContactRequest());\n    axios.post('/contacts',value).then(({data}) =>dispatch(addContactSuccess(data)))\n        .catch(error => dispatch(addContactError(error.message)))\n}\n\nexport const deleteContact= contactId => dispatch => {\n    dispatch(deleteContactRequest());\n    axios.delete(`/contacts/${contactId}`).then(()=> dispatch(deleteContactSuccess(contactId))).catch(error => dispatch(deleteContactError(error.message)))\n}\n\n\n","import React from \"react\";\nimport style from './styles/contactList.module.scss'\nimport {deleteContact} from '../../redux/contacts/contacts-operations';\nimport {getVisibleContacts} from '../../redux/contacts/contacts-selectors';\nimport {Button} from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {useSelector,useDispatch} from \"react-redux\";\n\n\nexport default function ContactList ()   {\n    const contacts=useSelector(state => getVisibleContacts(state))\n    const dispatch=useDispatch();\n    const onDelete = id => dispatch(deleteContact(id))\n    return (\n        <ul>\n            {contacts.map(({id,name,number})=> (\n\n                <li key={id} className={style.contactList_item}>{name}: {number} <Button\n                    variant=\"contained\"\n                    color=\"secondary\" startIcon={<DeleteIcon />} size=\"small\"  onClick={() => onDelete(id)}>Delete</Button></li>\n\n            ))}\n        </ul>\n    )\n}\n\n","import React, {useCallback, useEffect} from \"react\";\nimport {createPortal} from 'react-dom';\nimport style from './styles/modal.module.scss';\n\n\n\nexport default function Modal({onClose,children})  {\n\n    const modalRoot=document.querySelector('#modal-root');\n\n    const closeModalEscape = useCallback((e) => {\n\n        if (e.code === \"Escape\") {\n            onClose();\n        }\n    },[onClose])\n\n    useEffect(() => {\n        window.addEventListener('keydown',closeModalEscape)\n        return () => {\n            window.removeEventListener('keydown', closeModalEscape)\n        }\n    },[closeModalEscape])\n\n\n//\n   const  closeClickModal=(e) => {\n        if(e.target === e.currentTarget) {\n            onClose();\n        }\n    }\n\n        return createPortal(<div className={style.Modal__backdrop} onClick={closeClickModal}>\n            <div className={style.Modal__content}>{children}</div>\n        </div>,modalRoot)\n\n}\n","import React,{useState,useEffect} from \"react\";\nimport Filter from \"../../components/Filter\";\nimport ContactForm from \"../../components/ContactForm\";\nimport ContactList from \"../../components/ContactList\";\nimport {fetchContact} from '../../redux/contacts/contacts-operations'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"../../components/Modal\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loadingContacts,errorMessenger} from '../../redux/contacts/contacts-selectors';\nimport Icon from '@material-ui/core/Icon';\nimport {Button} from \"@material-ui/core\";\nimport style from '../styles/views.module.scss'\n\n\n\nexport default function App () {\n\n    const [showModal,setShowModal]=useState(false);\n\n\n    const dispatch=useDispatch();\n\n    const error=useSelector(state=> errorMessenger(state));\n    const loading=useSelector(state => loadingContacts(state))\n\n    useEffect(()=> {\n        dispatch(fetchContact())\n    },[dispatch])\n\n\n    const toggleModal =() => {\n        setShowModal(!showModal)\n    }\n\n        return (\n            <div className={style.contacts_container}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"  type='button' endIcon={<Icon>send</Icon>}   onClick={toggleModal}>Add contacts</Button>\n                <h1>Phonebook</h1>\n                <h2>Contacts</h2>\n                <Filter/>\n                <ContactList/>\n                {showModal && <Modal onClose={toggleModal}><ContactForm onSave={toggleModal}/></Modal>}\n                {error && <p color=\"red\">Error!!!!</p>}\n                { loading &&  <Loader type=\"Watch\" color=\"#00BFFF\" height={60} width={60} timeout={3000}  />}\n            </div>\n        )\n\n}\n\n"],"sourceRoot":""}